
package universidadejemplo.Vistas;

import com.toedter.calendar.JDateChooser;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import javax.swing.JDesktopPane;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import universidadejemplo.AccesoADatos.AlumnoData;
import universidadejemplo.Entidades.Alumno;

public class AlumnoView extends javax.swing.JInternalFrame {

    // Creo estos atributos acá porque me di cuenta que los uso en todos los métodos
    private AlumnoData alumnoData;
    private Alumno alumnoActual;

    public AlumnoView() {
        initComponents();
        alumnoData = new AlumnoData();
        alumnoActual = null;
        
        JTextFieldDateEditor editor = (JTextFieldDateEditor) jdFechaNac.getDateEditor();
        editor.setEditable(false);

        //Le cambio el colorcito al JInternalFrame sin necesidad de usar un JPanel 
        getContentPane().setBackground(new Color(0, 128, 128));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtDni = new javax.swing.JTextField();
        jbBuscarAlum = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jtApellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jdFechaNac = new com.toedter.calendar.JDateChooser();
        jbGuardarAlum = new javax.swing.JButton();
        jbEliminarAlum = new javax.swing.JButton();
        jbNuevoAlum = new javax.swing.JButton();
        jbSalirAlum = new javax.swing.JButton();
        jcbEstado = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Alumno");
        setPreferredSize(new java.awt.Dimension(500, 400));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel1.setText("Alumno");

        jLabel2.setText("Documento:");

        jtDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtDniKeyTyped(evt);
            }
        });

        jbBuscarAlum.setText("Buscar");
        jbBuscarAlum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarAlumActionPerformed(evt);
            }
        });

        jLabel3.setText("Apellido:");

        jtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtApellidoKeyTyped(evt);
            }
        });

        jLabel4.setText("Nombre:");

        jtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtNombreKeyTyped(evt);
            }
        });

        jLabel5.setText("Estado:");

        jLabel6.setText("Fecha de Nacimiento:");

        jdFechaNac.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jdFechaNacFocusGained(evt);
            }
        });

        jbGuardarAlum.setText("Guardar");
        jbGuardarAlum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarAlumActionPerformed(evt);
            }
        });

        jbEliminarAlum.setText("Eliminar");
        jbEliminarAlum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarAlumActionPerformed(evt);
            }
        });

        jbNuevoAlum.setText("Nuevo");
        jbNuevoAlum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoAlumActionPerformed(evt);
            }
        });

        jbSalirAlum.setText("Salir");
        jbSalirAlum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirAlumActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbNuevoAlum, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jdFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jcbEstado)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                .addComponent(jbGuardarAlum)
                                .addGap(27, 27, 27)
                                .addComponent(jbEliminarAlum)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addComponent(jbSalirAlum))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(173, 173, 173)))
                        .addGap(67, 67, 67))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbBuscarAlum))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbBuscarAlum)
                            .addComponent(jLabel2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jcbEstado))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jdFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNuevoAlum)
                    .addComponent(jbSalirAlum)
                    .addComponent(jbGuardarAlum)
                    .addComponent(jbEliminarAlum))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarAlumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarAlumActionPerformed
        // CLICK EN "BUSCAR" - SE VINCULA CON "BUSCAR ALUMNO POR DNI"

        try {
            // Debo parsear/convertir a un int el número que se ingresa en el JTextField
            int dni = Integer.parseInt(jtDni.getText());
            alumnoActual = alumnoData.buscarAlumnoPorDni(dni); // Me pide un int dni
            // NOTA: Recordar que el método buscar por Dni se ocupa de validar si ese alumno ya está cargado o no

            // También valido que el campo de dni no sea nulo
            if (alumnoActual != null) {
                // Ahora se debería mostrar en los otros campos los datos correspondientes al alumno seleccionado
                jtApellido.setText(alumnoActual.getApellido());
                jtNombre.setText(alumnoActual.getNombre());
                jdFechaNac.setDate(Date.valueOf(alumnoActual.getFechaNac())); // Parsear/convertir de LocalDate a Date
                jcbEstado.setSelected(alumnoActual.isActivo()); // RECORDAR!!!! si es un booleano va "IS" con un setSELECTED
            }
        } catch (NumberFormatException e) {
            // como en este caso el mensaje lo lanzaría desde esta ventana, en el JOption va "this" en lugar de "null"
            JOptionPane.showMessageDialog(this, "Debe ingresar un número entero, sin puntos ni comas");
            jtDni.setText("");
        }
    }//GEN-LAST:event_jbBuscarAlumActionPerformed

    private void jbGuardarAlumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarAlumActionPerformed
        // CLICK EN "GUARDAR" - SE VINCULA CON "GUARDAR ALUMNO" Y CON "MODIFICAR ALUMNO"        
        
        try {
            // De igual manera que el método anterior, debo parsear los JTextField
            // y rescatar los datos de cada uno de los campos, pero en este caso, para validar si
            // ese alumno ya existe o no. No lo seteo de una.
            int dni = Integer.parseInt(jtDni.getText());
            String apellido = jtApellido.getText();
            String nombre = jtNombre.getText();
            LocalDate fechaNac = jdFechaNac.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            Boolean estado = jcbEstado.isSelected();

            // Verifico que no queden campos vacíos
            if (apellido.isEmpty() || nombre.isEmpty() || fechaNac == null) {
                JOptionPane.showMessageDialog(this, "No puede haber campos vacíos");
                return; // con el return sale del método
            }

            if (alumnoActual == null) { // Si alumnoActual está en nulo, es porque es un alumno nuevo
                // ahora sí, le mando todos los datos por el constructor sin el ID
                alumnoActual = new Alumno(dni, apellido, nombre, fechaNac, estado);
                // Como se crea un nuevo alumno, llamamos al método "GUARDAR ALUMNO"
                alumnoData.guardarAlumno(alumnoActual);
                limpiarCampos();
            } else { // si no está en nulo es porque ese alumno con ese dni ya existe y se está modificando
                alumnoActual.setDni(dni);
                alumnoActual.setApellido(apellido);
                alumnoActual.setNombre(nombre);
                alumnoActual.setActivo(estado);
                alumnoActual.setFechaNac(fechaNac);
                // Como se modifica un alumno, llamamos al método "MODIFICAR ALUMNO"
                alumnoData.modificarAlumno(alumnoActual);
                limpiarCampos();
            }
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un número entero, sin puntos ni comas");
        }
        
        
    }//GEN-LAST:event_jbGuardarAlumActionPerformed

    private void jbNuevoAlumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoAlumActionPerformed
        // CLICK EN "NUEVO" - LIMPIA LOS CAMPOS 

        limpiarCampos();
        alumnoActual = null; // Lo seteo en nulo para poder empezar de cero
    }//GEN-LAST:event_jbNuevoAlumActionPerformed

    private void jbEliminarAlumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarAlumActionPerformed
        // CLICK EN "ELIMINAR" - SE VINCULA CON EL MÉTODO "ELIMINAR ALUMNO
        // Si alumnoActual no está nulo, si buscamos un alumno y se encontró...
        if (alumnoActual != null) {
            alumnoData.eliminarAlumno(alumnoActual.getIdAlumno());
            alumnoActual = null;
            limpiarCampos();
        } else { // Ahora si alumnoActual está nulo, es porque no se ha seleccionado un alumno
            JOptionPane.showMessageDialog(this, "No se ha seleccionado un alumno");
        }
    }//GEN-LAST:event_jbEliminarAlumActionPerformed
    
    private void jbSalirAlumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirAlumActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirAlumActionPerformed

    private void jdFechaNacFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jdFechaNacFocusGained
        JLabel etiqueta = new JLabel("dd/mm/aaaa");
        etiqueta.setVisible(false);
    }//GEN-LAST:event_jdFechaNacFocusGained

    private void jtDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtDniKeyTyped
        // Este evento evita que el usuario ingrese datos erróneos al campo         
        char letra=evt.getKeyChar();
        if (!Character.isDigit(letra)) {
            // Consumir el carácter que no es un dígito
            evt.consume();
        }
    }//GEN-LAST:event_jtDniKeyTyped

    private void jtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtApellidoKeyTyped
        // Este evento evita que el usuario ingrese datos erróneos al campo
        char letra=evt.getKeyChar();
        if((letra<'a' || letra>'z') && (letra<'A'||letra>'Z')){
            //si ingresa algo que no está dentro del valor numérico del codigo ASCII de las letras: 
            evt.consume();
        }
        
    }//GEN-LAST:event_jtApellidoKeyTyped

    private void jtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNombreKeyTyped
        // Este evento evita que el usuario ingrese datos erróneos al campo
        char letra=evt.getKeyChar();
        if((letra<'a' || letra>'z') && (letra<'A'||letra>'Z')){
            //si ingresa algo que no está dentro del valor numérico del codigo ASCII de las letras: 
            evt.consume();
        }
    }//GEN-LAST:event_jtNombreKeyTyped

    
    
    private void limpiarCampos(){ // Creo un método para que se limpie la pantalla
        jtDni.setText("");
        jtApellido.setText("");
        jtNombre.setText("");
        jcbEstado.setSelected(false);
        jdFechaNac.setDate(null);
    }

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton jbBuscarAlum;
    private javax.swing.JButton jbEliminarAlum;
    private javax.swing.JButton jbGuardarAlum;
    private javax.swing.JButton jbNuevoAlum;
    private javax.swing.JButton jbSalirAlum;
    private javax.swing.JCheckBox jcbEstado;
    private com.toedter.calendar.JDateChooser jdFechaNac;
    private javax.swing.JTextField jtApellido;
    private javax.swing.JTextField jtDni;
    private javax.swing.JTextField jtNombre;
    // End of variables declaration//GEN-END:variables
}
